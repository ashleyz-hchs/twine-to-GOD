jq ' (([.passages[] | select(.links == null or select(select(.links != null) | .links | .[0].name | contains(\"next\"))) | select(.links == null) | {type: \"text\", content: .text | split(\"\n\") | first, name}] | map( { (.name|tostring): . }) | add | del(.[].name)) as $endings | [.passages[] | select(.links == null or select(select(.links != null) | .links | .[0].name | contains(\"next\"))) | {type: \"text\", content: .text | split(\"\n\") | first, next: select(.links != null) | [.links[].link] | map(split(\"|\"))| map(.[1]) | .[], name}] | map( { (.name|tostring): . }) | add | del(.[].name) + $endings ) + ([.passages[] | select(select(.links != null) | .links | .[0].name | contains(\"next\") == false) | {type: \"question\", text: .text | split(\"\n\") | first, options: select(.links != null) | [.links[].link] | map(split(\"|\"))| map(.[0]), next: select(.links != null) | [.links[].link] | (if ( .[] | index(\"|\")) then ( map(split(\"|\")) | map(last) ) else (. ) end), name}] | map( { (.name|tostring): . }) | add | del(.[].name))' TwisonOutput.json > GODFormattedFile.json